deblobbing

removed new files, some of which contain blobs:

drivers/char/drm/nouveau_buffer.c
drivers/char/drm/nouveau_dma.c
drivers/char/drm/nouveau_dma.h
drivers/char/drm/nouveau_drm.h
drivers/char/drm/nouveau_drv.c
drivers/char/drm/nouveau_drv.h
drivers/char/drm/nouveau_fence.c
drivers/char/drm/nouveau_fifo.c
drivers/char/drm/nouveau_ioc32.c
drivers/char/drm/nouveau_irq.c
drivers/char/drm/nouveau_mem.c
drivers/char/drm/nouveau_notifier.c
drivers/char/drm/nouveau_object.c
drivers/char/drm/nouveau_reg.h
drivers/char/drm/nouveau_sgdma.c
drivers/char/drm/nouveau_state.c
drivers/char/drm/nouveau_swmthd.c
drivers/char/drm/nouveau_swmthd.h
drivers/char/drm/nv04_fb.c
drivers/char/drm/nv04_fifo.c
drivers/char/drm/nv04_graph.c
drivers/char/drm/nv04_instmem.c
drivers/char/drm/nv04_mc.c
drivers/char/drm/nv04_timer.c
drivers/char/drm/nv10_fb.c
drivers/char/drm/nv10_fifo.c
drivers/char/drm/nv10_graph.c
drivers/char/drm/nv20_graph.c
drivers/char/drm/nv40_fb.c
drivers/char/drm/nv40_fifo.c
drivers/char/drm/nv40_graph.c
drivers/char/drm/nv40_mc.c
drivers/char/drm/nv50_fifo.c
drivers/char/drm/nv50_graph.c
drivers/char/drm/nv50_instmem.c
drivers/char/drm/nv50_mc.c

removed patches to existing files to avoid naming removed files:

drivers/char/drm/Kconfig
drivers/char/drm/Makefile
drivers/char/drm/drm_pciids.h

From 2e677c51e2e77e78695eda61b52704144a490bec Mon Sep 17 00:00:00 2001
From: Dave Airlie <airlied@redhat.com>
Date: Fri, 29 Feb 2008 15:58:37 +1000
Subject: [PATCH] nouveau: rebased master from git

---
 drivers/char/drm/Kconfig            |    7 +
 drivers/char/drm/Makefile           |   12 +
 drivers/char/drm/drmP.h             |    4 +-
 drivers/char/drm/drm_bufs.c         |    5 +-
 drivers/char/drm/drm_drv.c          |    4 +
 drivers/char/drm/drm_irq.c          |    3 +-
 drivers/char/drm/drm_pciids.h       |  262 ++++
 drivers/char/drm/nouveau_buffer.c   |  293 +++++
 drivers/char/drm/nouveau_dma.c      |  172 +++
 drivers/char/drm/nouveau_dma.h      |   96 ++
 drivers/char/drm/nouveau_drm.h      |  166 +++
 drivers/char/drm/nouveau_drv.c      |  108 ++
 drivers/char/drm/nouveau_drv.h      |  602 ++++++++++
 drivers/char/drm/nouveau_fence.c    |  120 ++
 drivers/char/drm/nouveau_fifo.c     |  590 ++++++++++
 drivers/char/drm/nouveau_ioc32.c    |   72 ++
 drivers/char/drm/nouveau_irq.c      |  477 ++++++++
 drivers/char/drm/nouveau_mem.c      |  674 +++++++++++
 drivers/char/drm/nouveau_notifier.c |  165 +++
 drivers/char/drm/nouveau_object.c   | 1148 ++++++++++++++++++
 drivers/char/drm/nouveau_reg.h      |  586 +++++++++
 drivers/char/drm/nouveau_sgdma.c    |  341 ++++++
 drivers/char/drm/nouveau_state.c    |  694 +++++++++++
 drivers/char/drm/nouveau_swmthd.c   |  191 +++
 drivers/char/drm/nouveau_swmthd.h   |   33 +
 drivers/char/drm/nv04_fb.c          |   23 +
 drivers/char/drm/nv04_fifo.c        |  138 +++
 drivers/char/drm/nv04_graph.c       |  516 ++++++++
 drivers/char/drm/nv04_instmem.c     |  159 +++
 drivers/char/drm/nv04_mc.c          |   35 +
 drivers/char/drm/nv04_timer.c       |   44 +
 drivers/char/drm/nv10_fb.c          |   25 +
 drivers/char/drm/nv10_fifo.c        |  169 +++
 drivers/char/drm/nv10_graph.c       |  871 ++++++++++++++
 drivers/char/drm/nv20_graph.c       |  889 ++++++++++++++
 drivers/char/drm/nv40_fb.c          |   62 +
 drivers/char/drm/nv40_fifo.c        |  199 ++++
 drivers/char/drm/nv40_graph.c       | 2225 +++++++++++++++++++++++++++++++++++
 drivers/char/drm/nv40_mc.c          |   38 +
 drivers/char/drm/nv50_fifo.c        |  339 ++++++
 drivers/char/drm/nv50_graph.c       |  363 ++++++
 drivers/char/drm/nv50_instmem.c     |  323 +++++
 drivers/char/drm/nv50_mc.c          |   43 +
 43 files changed, 13282 insertions(+), 4 deletions(-)
 create mode 100644 drivers/char/drm/nouveau_buffer.c
 create mode 100644 drivers/char/drm/nouveau_dma.c
 create mode 100644 drivers/char/drm/nouveau_dma.h
 create mode 100644 drivers/char/drm/nouveau_drm.h
 create mode 100644 drivers/char/drm/nouveau_drv.c
 create mode 100644 drivers/char/drm/nouveau_drv.h
 create mode 100644 drivers/char/drm/nouveau_fence.c
 create mode 100644 drivers/char/drm/nouveau_fifo.c
 create mode 100644 drivers/char/drm/nouveau_ioc32.c
 create mode 100644 drivers/char/drm/nouveau_irq.c
 create mode 100644 drivers/char/drm/nouveau_mem.c
 create mode 100644 drivers/char/drm/nouveau_notifier.c
 create mode 100644 drivers/char/drm/nouveau_object.c
 create mode 100644 drivers/char/drm/nouveau_reg.h
 create mode 100644 drivers/char/drm/nouveau_sgdma.c
 create mode 100644 drivers/char/drm/nouveau_state.c
 create mode 100644 drivers/char/drm/nouveau_swmthd.c
 create mode 100644 drivers/char/drm/nouveau_swmthd.h
 create mode 100644 drivers/char/drm/nv04_fb.c
 create mode 100644 drivers/char/drm/nv04_fifo.c
 create mode 100644 drivers/char/drm/nv04_graph.c
 create mode 100644 drivers/char/drm/nv04_instmem.c
 create mode 100644 drivers/char/drm/nv04_mc.c
 create mode 100644 drivers/char/drm/nv04_timer.c
 create mode 100644 drivers/char/drm/nv10_fb.c
 create mode 100644 drivers/char/drm/nv10_fifo.c
 create mode 100644 drivers/char/drm/nv10_graph.c
 create mode 100644 drivers/char/drm/nv20_graph.c
 create mode 100644 drivers/char/drm/nv40_fb.c
 create mode 100644 drivers/char/drm/nv40_fifo.c
 create mode 100644 drivers/char/drm/nv40_graph.c
 create mode 100644 drivers/char/drm/nv40_mc.c
 create mode 100644 drivers/char/drm/nv50_fifo.c
 create mode 100644 drivers/char/drm/nv50_graph.c
 create mode 100644 drivers/char/drm/nv50_instmem.c
 create mode 100644 drivers/char/drm/nv50_mc.c

diff --git a/drivers/char/drm/drmP.h b/drivers/char/drm/drmP.h
index c6df504..7fb3a2f 100644
--- a/drivers/char/drm/drmP.h
+++ b/drivers/char/drm/drmP.h
@@ -1033,7 +1033,8 @@ extern unsigned long drm_get_resource_start(struct drm_device *dev,
 					    unsigned int resource);
 extern unsigned long drm_get_resource_len(struct drm_device *dev,
 					  unsigned int resource);
-
+struct drm_map_list *drm_find_matching_map(struct drm_device *dev,
+					   drm_local_map_t *map);
 				/* DMA support (drm_dma.h) */
 extern int drm_dma_setup(struct drm_device *dev);
 extern void drm_dma_takedown(struct drm_device *dev);
@@ -1045,6 +1046,7 @@ extern void drm_core_reclaim_buffers(struct drm_device *dev,
 extern int drm_control(struct drm_device *dev, void *data,
 		       struct drm_file *file_priv);
 extern irqreturn_t drm_irq_handler(DRM_IRQ_ARGS);
+extern int drm_irq_install(struct drm_device * dev);
 extern int drm_irq_uninstall(struct drm_device *dev);
 extern void drm_driver_irq_preinstall(struct drm_device *dev);
 extern void drm_driver_irq_postinstall(struct drm_device *dev);
diff --git a/drivers/char/drm/drm_bufs.c b/drivers/char/drm/drm_bufs.c
index 6da493f..f3aac97 100644
--- a/drivers/char/drm/drm_bufs.c
+++ b/drivers/char/drm/drm_bufs.c
@@ -48,8 +48,8 @@ unsigned long drm_get_resource_len(struct drm_device *dev, unsigned int resource
 }
 EXPORT_SYMBOL(drm_get_resource_len);
 
-static struct drm_map_list *drm_find_matching_map(struct drm_device *dev,
-					     drm_local_map_t *map)
+struct drm_map_list *drm_find_matching_map(struct drm_device *dev,
+					   drm_local_map_t *map)
 {
 	struct drm_map_list *entry;
 	list_for_each_entry(entry, &dev->maplist, head) {
@@ -62,6 +62,7 @@ static struct drm_map_list *drm_find_matching_map(struct drm_device *dev,
 
 	return NULL;
 }
+EXPORT_SYMBOL(drm_find_matching_map);
 
 static int drm_map_handle(struct drm_device *dev, struct drm_hash_item *hash,
 			  unsigned long user_token, int hashed_handle)
diff --git a/drivers/char/drm/drm_drv.c b/drivers/char/drm/drm_drv.c
index 5fa7d39..3ac117f 100644
--- a/drivers/char/drm/drm_drv.c
+++ b/drivers/char/drm/drm_drv.c
@@ -296,6 +296,10 @@ int drm_init(struct drm_driver *driver)
 		while ((pdev =
 			pci_get_subsys(pid->vendor, pid->device, pid->subvendor,
 				       pid->subdevice, pdev)) != NULL) {
+
+			if ((pid->class != 0)
+			    && ((pdev->class & pid->class_mask) != pid->class))
+				continue;
 			/* stealth mode requires a manual probe */
 			pci_dev_get(pdev);
 			drm_get_dev(pdev, pid, driver);
diff --git a/drivers/char/drm/drm_irq.c b/drivers/char/drm/drm_irq.c
index 3b1a382..a2c1369 100644
--- a/drivers/char/drm/drm_irq.c
+++ b/drivers/char/drm/drm_irq.c
@@ -81,7 +81,7 @@ int drm_irq_by_busid(struct drm_device *dev, void *data,
  * \c drm_driver_irq_preinstall() and \c drm_driver_irq_postinstall() functions
  * before and after the installation.
  */
-static int drm_irq_install(struct drm_device * dev)
+int drm_irq_install(struct drm_device * dev)
 {
 	int ret;
 	unsigned long sh_flags = 0;
@@ -141,6 +141,7 @@ static int drm_irq_install(struct drm_device * dev)
 
 	return 0;
 }
+EXPORT_SYMBOL(drm_irq_install);
 
 /**
  * Uninstall the IRQ handler.
